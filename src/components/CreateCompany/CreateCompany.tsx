import React, { useEffect, useState } from "react";
import { useUserCompany } from "../../context/UserCompanyContext";
import { toast } from "react-toastify";
import { useNavigate } from "react-router";

export default function CreateCompany() {
  const [numberOfProducts, setnumberOfProducts] = useState("");
  const [numberOfCustomers, setnumberOfCustomers] = useState("");
  const [name, setName] = useState("");
  const [percentage, setPercentage] = useState("");

  const [isLoading, setisLoading] = useState(false);
  const {createCompany} = useUserCompany();
  const navigate = useNavigate()
    const handleSubmit = async (e: any) => {
      e.preventDefault();
      try {
        setisLoading(true);
        const user = await createCompany({
            numberOfUsers: numberOfCustomers ,
            numberOfProducts: numberOfProducts,
            name:name,
            percentage:percentage
            }
        ); 
        setisLoading(false);
        toast.success(JSON.stringify("Success"), {
          pauseOnHover: true,
          position: "top-right",
        }); 
        navigate("/")
      } catch (err: any) {
        await toast.error(err.message, {
          position: "top-right",
          pauseOnHover: true,
        });
        console.warn(err);
        setisLoading(false);
      }
    };


  let calculatedPercentage = 0
  if (!isNaN(+numberOfCustomers) && !isNaN(+numberOfProducts) && +numberOfProducts >0)
    calculatedPercentage =(+numberOfCustomers/+numberOfProducts) * 100
  useEffect(() => {
        setPercentage(`${calculatedPercentage}` )
  }, [ numberOfCustomers, numberOfProducts])
  
  return (
    <div className=" ">
      <h4 className=" font-bold text-2xl">Create a new Company</h4>
      <div className="w-full lg:w-8/12 text-black">
        <form action="" onSubmit={handleSubmit}>
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="enter company name"
            value={name}
            onChange={(e) => {
              setName(e.target.value);
            }}
          />
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="enter number of users"
            value={numberOfCustomers}
            onChange={(e) => {
              setnumberOfCustomers(e.target.value);
            }}
          />
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="enter  number of products"
            value={numberOfProducts}
            onChange={(e) => {
              setnumberOfProducts(e.target.value);
            }}
          />
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="percentage autogenerated"
            value={percentage} 
            disabled
          />
          <button
            className="mt-4 p-2 bg-rose-700 rounded shadow text-white w-full"
            disabled={isLoading}
          >
            {isLoading ? "Loading..." : "Submit"}
          </button>
        </form>
      </div>
    </div>
  );
}
