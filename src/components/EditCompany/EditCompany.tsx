import React, { useEffect, useState } from "react";
import { useUserCompany } from "../../context/UserCompanyContext";
import { toast } from "react-toastify";
import UploadImage from "../../upload";

export default function EditCompany({ company }: any) {
  const [numberOfProducts, setnumberOfProducts] = useState(company.numberOfProducts||"");
  const [numberOfCustomers, setnumberOfCustomers] = useState(company.numberOfUsers|| "");
  const [name, setName] = useState(company.name|| "");
  const [image, setImage] = useState(company.image|| "");
  const [percentage, setPercentage] = useState(company.percentage|| "");

  const [isLoading, setisLoading] = useState(false);
  const { editCompany } = useUserCompany();

  const handleSubmit = async (e: any) => {
    e.preventDefault();
    try {
      setisLoading(true);
      const updatedCompany = await editCompany(company.id,{
        numberOfUsers: numberOfCustomers,
        numberOfProducts: numberOfProducts,
        name: name,
        percentage: percentage,
      });
      setisLoading(false);
      toast.success(JSON.stringify("Success"), {
        pauseOnHover: true,
        position: "top-right",
      });
    } catch (err: any) {
      await toast.error(err.message, {
        position: "top-right",
        pauseOnHover: true,
      });
      console.warn(err);
      setisLoading(false);
    }
  };

  let calculatedPercentage = 0;
  if (
    !isNaN(+numberOfCustomers) &&
    !isNaN(+numberOfProducts) &&
    +numberOfProducts > 0
  )
    calculatedPercentage = (+numberOfCustomers / +numberOfProducts) * 100;
  useEffect(() => { 
    setPercentage(`${calculatedPercentage}`);
  }, [numberOfCustomers,numberOfProducts]);

  return (
    <div className=" ">
      <h4 className=" font-bold text-2xl">Edit Company</h4>
      <div className="w-full lg:w-8/12 text-black">
        <form action="" onSubmit={handleSubmit}>
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="enter company name"
            value={name}
            onChange={(e) => {
              setName(e.target.value);
            }}
          />
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="enter number of users"
            value={numberOfCustomers}
            onChange={(e) => {
              setnumberOfCustomers(e.target.value);
            }}
          />
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="enter  number of products"
            value={numberOfProducts}
            onChange={(e) => {
              setnumberOfProducts(e.target.value);
            }}
          />
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="upload Image"
            value={image}
            onChange={(e) => {
              setImage(e.target.value);
            }}
          />

          <UploadImage setImage={setImage}/>
          <input
            type="text"
            className="mt-4 w-full p-2"
            placeholder="percentage autogenerated"
            value={percentage}
            disabled
          />
          <button
            className="mt-4 p-2 bg-rose-700 rounded shadow text-white w-full"
            disabled={isLoading}
          >
            {isLoading ? "Loading..." : "Edit"}
          </button>
        </form>
      </div>
    </div>
  );
}
